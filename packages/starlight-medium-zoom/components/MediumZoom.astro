<starlight-medium-zoom>
  <template id="smz-template">
    <div class="smz-content">
      <div class="smz-img"></div>
      <div class="smz-caption smz-caption-hidden"></div>
    </div>
  </template>
</starlight-medium-zoom>

<style>
  :global(.medium-zoom-overlay) {
    inset: 0;
    opacity: 0;
    position: fixed;
    transition: opacity 0.3s;
    will-change: opacity;
    z-index: 50;
  }

  :global(.medium-zoom--opened .medium-zoom-overlay) {
    cursor: zoom-out;
    opacity: 1;
  }

  :global(.medium-zoom-image) {
    cursor: zoom-in;
    transition: transform 0.3s cubic-bezier(0.2, 0, 0.2, 1);
  }

  :global(.medium-zoom-image--hidden) {
    visibility: hidden;
  }

  :global(.medium-zoom-image--opened) {
    cursor: zoom-out;
    position: relative;
    will-change: transform;
    z-index: 52;
  }

  .smz-content {
    height: 520px;
    inset: 0;
    margin: auto 2rem;
    position: fixed;
    z-index: 51;
  }

  .smz-img {
    background-color: var(--sl-color-bg);
    border: 1px solid var(--sl-color-gray-6);
    height: 100%;
  }

  .smz-caption {
    background-color: var(--sl-color-bg-sidebar);
    border: 1px solid var(--sl-color-gray-6);
    border-top: 0;
  }

  .smz-caption-hidden {
    display: none;
  }
</style>

<script>
  customElements.define(
    'starlight-medium-zoom',
    class StarlightMediumZoom extends HTMLElement {
      #caption: HTMLDivElement | null | undefined

      constructor() {
        super()

        // TODO(HiDeoo)
        const image = document.querySelector<HTMLDivElement>('.sl-markdown-content img')
        if (!image) return

        const template = document.querySelector<HTMLTemplateElement>('#smz-template')
        this.#caption = template?.content.querySelector('.smz-caption')

        window.addEventListener('DOMContentLoaded', () => {
          const onIdle = window.requestIdleCallback || ((cb) => setTimeout(cb, 1))

          onIdle(async () => {
            const { default: mediumZoom } = await import('medium-zoom/dist/pure')

            const zoom = mediumZoom('.sl-markdown-content img', {
              background: 'hsla(224 10% 10% / 0.95)',
              container: '.smz-img',
              template: '#smz-template',
            })

            zoom.on('open', this.#onOpen)
          })
        })
      }

      #setCaption(text: string) {
        if (!this.#caption) return

        text = text.trim()

        if (text.length === 0) {
          this.#caption.classList.add('smz-caption-hidden')
          return
        } else {
          this.#caption.classList.remove('smz-caption-hidden')
          this.#caption.textContent = text
        }
      }

      #onOpen = (event: Event) => {
        if (!(event.target instanceof HTMLImageElement)) return

        this.#setCaption(event.target.alt)
      }
    },
  )
</script>
